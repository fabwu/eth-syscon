MODULE Uart;
	IMPORT Platform, SYSTEM, Kernel, Device, UartMin;
CONST 
	UARTBufLen* = 3000; 
	UART0 = 0; 
	PNONE* = 0; 
	PODD* = 8; 
	PEVEN* = 24; 
	PFORCE1* = 40; 
	PFORCE0* = 56; 
TYPE 
	UARTBuffer = ARRAY UARTBufLen OF SYSTEM.BYTE; 

	UartDesc* = RECORD (Device.DeviceDesc)
		id: SIZE; 
		in, out, oin, oout: SIZE; 
		open: BOOLEAN; 
		inbuffer, outbuffer: UARTBuffer; 
	END; 

	Uart* = POINTER TO UartDesc; 
VAR 
	uarts: ARRAY Platform.NUMCOMPORTS OF Uart; 

	PROCEDURE ^ Close(dev: Device.Device); 
	PROCEDURE ^ Available(dev: Device.Device): SIZE; 
	PROCEDURE ^ Free(dev: Device.Device): SIZE; 
	PROCEDURE ^ EnableTXInterrupt(dev: Uart; enable: BOOLEAN); 
	PROCEDURE ^ Write(dev: Device.Device; CONST buf: ARRAY OF SYSTEM.BYTE; ofs: SIZE; VAR len: SIZE); 
	PROCEDURE ^ Read(dev: Device.Device; VAR buf: ARRAY OF SYSTEM.BYTE; ofs: SIZE; VAR len: SIZE); 
	PROCEDURE ^ Flush(dev: Device.Device); 
	PROCEDURE ^ EmptyFIFO(dev: Uart); 
	PROCEDURE ^ FillFIFO(dev: Uart); 
	PROCEDURE ^ Command(dev: Device.Device; cmd, param: INTEGER; VAR res: INTEGER); 
	PROCEDURE ^ OpenComPort*(uart: Uart; baudrate, parity, databits: INTEGER; flowControl: BOOLEAN); 
	PROCEDURE ^ Open(dev: Device.Device); 
	PROCEDURE ^ UARTHandler(uart: Uart); 
	PROCEDURE ^ UartHandler0; 
	PROCEDURE ^ InitUART; 
	PROCEDURE ^ SetTrapMode*(enable: BOOLEAN); 
	PROCEDURE ^ Install*; 
BEGIN
END Uart.
