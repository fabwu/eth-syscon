MODULE Device;
	IMPORT SYSTEM, UartMin;
CONST 
	DeviceNameLength* = 32; 
TYPE 
	DeviceName* = ARRAY DeviceNameLength OF CHAR; 

	Device* = POINTER TO DeviceDesc; 

	DeviceDesc* = RECORD 
		Write*: PROCEDURE (dev: Device; CONST buf: ARRAY OF SYSTEM.BYTE; ofs: SIZE; VAR len: SIZE); 
		Read*: PROCEDURE (dev: Device; VAR buf: ARRAY OF SYSTEM.BYTE; ofs: SIZE; VAR len: SIZE); 
		Available*: PROCEDURE (dev: Device):SIZE; 
		Free*: PROCEDURE (dev: Device):SIZE; 
		Command*: PROCEDURE (dev: Device; cmd, param: INTEGER; VAR res: INTEGER); 
		Flush*: PROCEDURE (dev: Device); 
		GetErrorText*: PROCEDURE (dev: Device; VAR err: ARRAY OF CHAR); 
		Open*: PROCEDURE (dev: Device); 
		Close*: PROCEDURE (dev: Device); 
		res*: INTEGER; 
		name*: DeviceName; 
		next: Device; 
	END; 
VAR 
	devices: Device; 
	null: Device; 

	PROCEDURE ^ Install*(device: Device; CONST name: ARRAY OF CHAR); 
	PROCEDURE ^ GetDevice*(CONST name: ARRAY OF CHAR): Device; 
	PROCEDURE ^ DumpDevices*; 
	PROCEDURE ^ NullAvailable(dev: Device): SIZE; 
	PROCEDURE ^ NullFree(dev: Device): SIZE; 
	PROCEDURE ^ NullWrite(dev: Device; CONST buf: ARRAY OF SYSTEM.BYTE; ofs: SIZE; VAR len: SIZE); 
	PROCEDURE ^ NullRead(dev: Device; VAR buf: ARRAY OF SYSTEM.BYTE; ofs: SIZE; VAR len: SIZE); 
	PROCEDURE ^ NullCommand(dev: Device; cmd, param: INTEGER; VAR res: INTEGER); 
	PROCEDURE ^ NullProc(dev: Device); 
	PROCEDURE ^ NullGetErrorText(dev: Device; VAR err: ARRAY OF CHAR); 
	PROCEDURE ^ InitDevice*(dev: Device); 
	PROCEDURE ^ Read*(dev: Device; VAR chr: CHAR); 
	PROCEDURE ^ Write*(dev: Device; chr: CHAR); 
	PROCEDURE ^ ReadBool*(dev: Device; VAR bool: BOOLEAN); 
	PROCEDURE ^ WriteBool*(dev: Device; x: BOOLEAN); 
	PROCEDURE ^ ReadBytes(dev: Device; VAR buf: ARRAY OF SYSTEM.BYTE; offset, len: SIZE); 
	PROCEDURE ^ WriteBytes*(dev: Device; CONST buf: ARRAY OF SYSTEM.BYTE; offset, len: SIZE); 
	PROCEDURE ^ ReadChars*(dev: Device; VAR buf: ARRAY OF CHAR; offset, len: SIZE); 
	PROCEDURE ^ WriteChars*(dev: Device; CONST buf: ARRAY OF CHAR; offset, len: SIZE); 
	PROCEDURE ^ ReadInt*(dev: Device; VAR int: SIZE); 
	PROCEDURE ^ WriteInt*(dev: Device; int: SIZE); 
	PROCEDURE ^ ReadReal*(dev: Device; VAR real: FLOAT32); 
	PROCEDURE ^ WriteReal*(dev: Device; real: FLOAT32); 
	PROCEDURE ^ ReadSet*(dev: Device; VAR set: SET); 
	PROCEDURE ^ WriteSet*(dev: Device; set: SET); 
	PROCEDURE ^ ReadStr*(dev: Device; VAR buf: ARRAY OF CHAR); 
	PROCEDURE ^ WriteStr*(dev: Device; CONST buf: ARRAY OF CHAR); 
	PROCEDURE ^ Available*(dev: Device): SIZE; 
	PROCEDURE ^ Free*(dev: Device): SIZE; 
	PROCEDURE ^ Flush*(dev: Device); 
	PROCEDURE ^ Open*(dev: Device); 
	PROCEDURE ^ Close*(dev: Device); 
	PROCEDURE ^ Command*(dev: Device; cmd, param: INTEGER; VAR res: INTEGER); 
BEGIN
END Device.
